package practica2;

import java.util.ArrayList;
import javax.swing.JFileChooser;

/**
 *
 * @author Adrian
 */
public class ventanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form ventaPrincipal
     */
    String resultado = "", estadoActual;
    ArrayList<String> estadosActualesλ = new ArrayList<>();
    AFD a;
    AFND b;
    int contador = 0;
    boolean error = true;
    boolean tipo;//false si es AFD, true si es AFND

    public ventanaPrincipal() {
        initComponents();
        jErrorArchivo.setVisible(false);
        jErrorArchivo2.setVisible(false);
        bMostrarTodo.setVisible(false);
        bSiguientePaso.setVisible(false);
        jSecuencia.setVisible(false);
        tSecuencia.setVisible(false);
        bAceptar.setVisible(false);
        jErrorSecuencia.setVisible(false);
        jError.setVisible(false);
        jTransiciones.setVisible(false);
        jTransicionesλ.setVisible(false);
        jEstadosFinales.setVisible(false);
        jEstadoIni.setVisible(false);
        setTitle("Práctica 2");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAFD = new javax.swing.JButton();
        bAFND = new javax.swing.JButton();
        bFicheroAFND = new javax.swing.JButton();
        bFicheroAFD = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();
        jTitulo = new javax.swing.JLabel();
        bMostrarTodo = new javax.swing.JButton();
        bSiguientePaso = new javax.swing.JButton();
        jSecuencia = new javax.swing.JLabel();
        tSecuencia = new javax.swing.JTextField();
        bAceptar = new javax.swing.JButton();
        jErrorSecuencia = new javax.swing.JLabel();
        jErrorArchivo = new javax.swing.JLabel();
        jErrorArchivo2 = new javax.swing.JLabel();
        jTransiciones = new javax.swing.JLabel();
        jError = new javax.swing.JLabel();
        jResultado = new javax.swing.JLabel();
        jTransicionesλ = new javax.swing.JLabel();
        jEstadosFinales = new javax.swing.JLabel();
        jEstadoIni = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bAFD.setText("AFD");
        bAFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAFDActionPerformed(evt);
            }
        });

        bAFND.setText("AFND");
        bAFND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAFNDActionPerformed(evt);
            }
        });

        bFicheroAFND.setText("Crear fichero AFND");
        bFicheroAFND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFicheroAFNDActionPerformed(evt);
            }
        });

        bFicheroAFD.setText("Crear fichero AFD");
        bFicheroAFD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFicheroAFDActionPerformed(evt);
            }
        });

        bSalir.setText("Salir");
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirActionPerformed(evt);
            }
        });

        jTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTitulo.setText("ESCOJA ALGORTIMO");

        bMostrarTodo.setText("Mostrar Todo");
        bMostrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMostrarTodoActionPerformed(evt);
            }
        });

        bSiguientePaso.setText("Siguiente Paso");
        bSiguientePaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguientePasoActionPerformed(evt);
            }
        });

        jSecuencia.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jSecuencia.setText("Secuencia:");

        tSecuencia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        bAceptar.setText("Aceptar");
        bAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAceptarActionPerformed(evt);
            }
        });

        jErrorSecuencia.setForeground(new java.awt.Color(255, 0, 0));
        jErrorSecuencia.setText("* La secuencia está vacía");

        jErrorArchivo.setForeground(new java.awt.Color(255, 0, 0));
        jErrorArchivo.setText("* El archivo no es un .txt/.tsp");

        jErrorArchivo2.setForeground(new java.awt.Color(255, 0, 0));
        jErrorArchivo2.setText("* El archivo no es un .txt/.tsp");

        jTransiciones.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTransiciones.setText("Transiciones: ");

        jError.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jError.setForeground(new java.awt.Color(255, 0, 0));
        jError.setText("ERROR!!!");

        jResultado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jTransicionesλ.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTransicionesλ.setText("Transicionesλ: ");

        jEstadosFinales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jEstadosFinales.setText("Estados Finales:");

        jEstadoIni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jEstadoIni.setText("Estado Inicial: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTitulo)
                .addGap(380, 380, 380))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jError)
                .addGap(336, 336, 336)
                .addComponent(bSalir)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(375, 375, 375)
                .addComponent(jResultado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jErrorArchivo)
                                    .addGap(612, 612, 612))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jSecuencia)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(bAceptar))
                                        .addComponent(jErrorSecuencia)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(56, 56, 56)
                                            .addComponent(bMostrarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(55, 55, 55)
                                            .addComponent(bSiguientePaso)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(bAFD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bFicheroAFD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jEstadosFinales))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(bFicheroAFND, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bAFND, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jErrorArchivo2)
                            .addComponent(jTransicionesλ))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jEstadoIni)
                            .addComponent(jTransiciones))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(132, 132, 132)
                            .addComponent(jErrorArchivo))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jErrorArchivo2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTitulo)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSecuencia)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tSecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bAceptar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jErrorSecuencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bMostrarTodo)
                            .addComponent(bSiguientePaso))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bAFND, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bFicheroAFND))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bAFD, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bFicheroAFD)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransicionesλ)
                            .addComponent(jEstadosFinales))
                        .addGap(18, 18, 18)
                        .addComponent(jTransiciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jEstadoIni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                        .addComponent(bSalir)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jResultado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jError)
                        .addGap(57, 57, 57))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bFicheroAFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFicheroAFDActionPerformed
        crearFichero cF = new crearFichero(false);
        cF.setVisible(true);
    }//GEN-LAST:event_bFicheroAFDActionPerformed

    private void bSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_bSalirActionPerformed

    private void bFicheroAFNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFicheroAFNDActionPerformed
        crearFichero cF = new crearFichero(true);
        cF.setVisible(true);
    }//GEN-LAST:event_bFicheroAFNDActionPerformed

    private void bAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAceptarActionPerformed
        if (!tSecuencia.getText().equals("")) {
            tSecuencia.setEditable(false);
            bMostrarTodo.setVisible(true);
            bSiguientePaso.setVisible(true);
            contador = 0;
            resultado = "";
            jResultado.setText(resultado);
            jError.setVisible(false);
            error = true;
            jErrorSecuencia.setVisible(false);
        } else
            jErrorSecuencia.setVisible(true);
    }//GEN-LAST:event_bAceptarActionPerformed

    private void bAFDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAFDActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
        String archivo;
        ArrayList<TransicionAFD> transiciones;
        ArrayList<String> estadosFinales;
        
        try {
            archivo = fileChooser.getSelectedFile().getAbsolutePath();
            if (!archivo.contains(".tsp") && !archivo.contains(".txt")) {
                jErrorArchivo.setVisible(true);
            } else {
                jTransiciones.setVisible(true);
                jErrorArchivo.setVisible(false);
                jErrorArchivo2.setVisible(false);
                jTransicionesλ.setVisible(false);
                jSecuencia.setVisible(true);
                tSecuencia.setVisible(true);
                bAceptar.setVisible(true);
                jResultado.setVisible(false);
                tSecuencia.setText("");
                jError.setVisible(false);
                tSecuencia.setEditable(true);
                jTitulo.setText("ESCRIBA LA SECUENCIA");
                a = AFD.pedir(archivo);
                tipo = false;
                transiciones = a.getTransiciones();
                String t = "<html>Transiciones:<br/>";
                for (int i = 0; i < transiciones.size(); i++) {
                    t += transiciones.get(i).getInicial() + " '" + transiciones.get(i).getSimbolo() + "' "
                            + transiciones.get(i).getFin() + "<br/";
                }
                t += "</html>";
                jTransiciones.setText(t);
                estadosFinales=a.getEstadosFinales();
                t = "<html>Estados Finales:<br/>["+estadosFinales.get(0);
                for (int i = 1; i < estadosFinales.size(); i++) {
                    t +=", "+estadosFinales.get(i);
                }
                t += "]</html>";
                jEstadosFinales.setText(t);
                jEstadosFinales.setVisible(true);
                t="<html>Estado Inicial:<br/>";
                t+=a.getEstadoIni()+"</html>";
                jEstadoIni.setText(t);
                jEstadoIni.setVisible(true);
            }
        } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bAFDActionPerformed

    private void bAFNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAFNDActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
        String archivo;
        ArrayList<TransicionAFND> transiciones;
        ArrayList<TransicionLambda> transicionesλ;
        ArrayList<String> estadosFinales;
        try {
            archivo = fileChooser.getSelectedFile().getAbsolutePath();
            if (!archivo.contains(".tsp") && !archivo.contains(".txt")) {
                jErrorArchivo.setVisible(true);
            } else {
                jTransiciones.setVisible(true);
                jTransicionesλ.setVisible(true);
                jErrorArchivo.setVisible(false);
                jErrorArchivo2.setVisible(false);
                jSecuencia.setVisible(true);
                tSecuencia.setVisible(true);
                bAceptar.setVisible(true);
                jResultado.setVisible(false);
                tSecuencia.setText("");
                jError.setVisible(false);
                tSecuencia.setEditable(true);
                jTitulo.setText("ESCRIBA LA SECUENCIA");
                tipo = true;
                b = AFND.pedir(archivo);
                transiciones = b.getTransiciones();
                transicionesλ = b.getTransicionesλ();
                String t = "<html>Transiciones:<br/>";
                String t2 = "<html>Transicionesλ:<br/>";
                for (int i = 0; i < transiciones.size(); i++) {
                    t += transiciones.get(i).getInicial() + " '" + transiciones.get(i).getSimbolo() + "' "
                            + transiciones.get(i).getFin() + "<br/";
                }
                for (int i = 0; i < transicionesλ.size(); i++) {
                    t2 += transicionesλ.get(i).getInicial() + " " + transicionesλ.get(i).getFin() + "<br/>";
                }
                t += "</html>";
                t2 += "</html>";
                jTransiciones.setText(t);
                jTransicionesλ.setText(t2);
                estadosFinales=b.getEstadosFinales();
                t = "<html>Estados Finales:<br/>["+estadosFinales.get(0);
                for (int i = 1; i < estadosFinales.size(); i++) {
                    t +=", "+estadosFinales.get(i);
                }
                t += "]</html>";
                jEstadosFinales.setText(t);
                jEstadosFinales.setVisible(true);
                t="<html>Estado Inicial:<br/>";
                t+=b.getEstadoIni()+"</html>";
                jEstadoIni.setText(t);
                jEstadoIni.setVisible(true);
            }
        } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bAFNDActionPerformed

    private void bSiguientePasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguientePasoActionPerformed
        jResultado.setVisible(true);
        if (tipo) {
            if (resultado.equals("")){
                estadosActualesλ = b.transicion(b.getEstadosIniciales(), tSecuencia.getText().charAt(contador));
                resultado = b.getEstadosIniciales().toString() + "     ----->     ";
                if (estadosActualesλ==null) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadosActualesλ.toString();
                }
                jResultado.setText("<html>" + resultado + "</html>");
                contador++;
            } else if (error && contador < tSecuencia.getText().length()) {
                resultado += "<br/>" + estadosActualesλ.toString() + "    ----->     ";
                estadosActualesλ = b.transicion(estadosActualesλ, tSecuencia.getText().charAt(contador));
                if (estadosActualesλ==null) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadosActualesλ.toString();
                }
                jResultado.setText("<html>" + resultado + "</html>");
                contador++;
            } else if (contador == tSecuencia.getText().length()) {
                if (b.reconocer(tSecuencia.getText())) {
                    resultado += "<br/>ACEPTADO";
                    jResultado.setText("<html>" + resultado + "</html>");
                } else {
                    resultado += "<br/>RECHAZADO";
                    jResultado.setText("<html>" + resultado + "</html>");
                }
            }
        } else {
            if (resultado.equals("")) {
                estadoActual = a.transicion(a.getEstadoIni(), tSecuencia.getText().charAt(contador));
                resultado = a.getEstadoIni() + "     ----->     ";
                System.out.println(a.getEstadoIni());
                if (estadoActual.equals("Error")) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadoActual;
                }
                jResultado.setText("<html>" + resultado + "</html>");
                contador++;
            } else if (error && contador < tSecuencia.getText().length()) {
                resultado += "<br/>" + estadoActual + "    ----->     ";
                estadoActual = a.transicion(estadoActual, tSecuencia.getText().charAt(contador));
                if (estadoActual.equals("Error")) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadoActual;
                }
                jResultado.setText("<html>" + resultado + "</html>");
                contador++;
            } else if (contador == tSecuencia.getText().length()) {
                if (a.reconocer(tSecuencia.getText())) {
                    resultado += "<br/>ACEPTADO";
                    jResultado.setText("<html>" + resultado + "</html>");
                } else {
                    resultado += "<br/>RECHAZADO";
                    jResultado.setText("<html>" + resultado + "</html>");
                }
                
            }
        }
        tSecuencia.setEditable(true);
    }//GEN-LAST:event_bSiguientePasoActionPerformed

    private void bMostrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMostrarTodoActionPerformed
        jResultado.setVisible(true);
        if(tipo){
            do{
              if (resultado.equals("")){
                estadosActualesλ = b.transicion(b.getEstadosIniciales(), tSecuencia.getText().charAt(contador));
                resultado = b.getEstadosIniciales().toString() + "     ----->     ";
                if (estadosActualesλ==null) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadosActualesλ.toString();
                }
                contador++;  
            }else if (error && contador < tSecuencia.getText().length()) {
                resultado += "<br/>" + estadosActualesλ.toString() + "    ----->     ";
                estadosActualesλ = b.transicion(estadosActualesλ, tSecuencia.getText().charAt(contador));
                if (estadosActualesλ==null) {
                    jError.setVisible(true);
                    error = false;
                } else {
                    resultado += estadosActualesλ.toString();
                }
                contador++;
            }
            }while(contador < tSecuencia.getText().length() && error);
            if (error) {
                if (b.reconocer(tSecuencia.getText())) {
                    resultado += "<br/>ACEPTADO";
                } else {
                    resultado += "<br/>RECHAZADO";
                }

                jResultado.setText("<html>" + resultado + "</html>");
            } else {
                jResultado.setText("<html>" + resultado + "</html>");
                jError.setVisible(true);
            }
            tSecuencia.setEditable(true);
            
        }else{
            do {
                if (resultado.equals("")) {
                    estadoActual = a.transicion(a.getEstadoIni(), tSecuencia.getText().charAt(contador));
                    resultado = a.getEstadoIni() + "     ----->     ";
                    if (estadoActual.equals("Error")) {
                        jError.setVisible(true);
                        error = false;
                    } else {
                        resultado += estadoActual;
                    }
                    contador++;
                } else if (error && contador < tSecuencia.getText().length()) {
                    resultado += "<br/>" + estadoActual + "    ----->     ";
                    estadoActual = a.transicion(estadoActual, tSecuencia.getText().charAt(contador));
                    if (estadoActual.equals("Error")) {
                        jError.setVisible(true);
                        error = false;
                    } else {
                        resultado += estadoActual;
                    }
                    contador++;
                }
            } while (contador < tSecuencia.getText().length() && error);
            if (error) {
                if (a.reconocer(tSecuencia.getText())) {
                    resultado += "<br/>ACEPTADO";
                } else {
                    resultado += "<br/>RECHAZADO";
                }

                jResultado.setText("<html>" + resultado + "</html>");
            } else {
                jResultado.setText("<html>" + resultado + "</html>");
                jError.setVisible(true);
            }
            tSecuencia.setEditable(true);
        }

    }//GEN-LAST:event_bMostrarTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAFD;
    private javax.swing.JButton bAFND;
    private javax.swing.JButton bAceptar;
    private javax.swing.JButton bFicheroAFD;
    private javax.swing.JButton bFicheroAFND;
    private javax.swing.JButton bMostrarTodo;
    private javax.swing.JButton bSalir;
    private javax.swing.JButton bSiguientePaso;
    private javax.swing.JLabel jError;
    private javax.swing.JLabel jErrorArchivo;
    private javax.swing.JLabel jErrorArchivo2;
    private javax.swing.JLabel jErrorSecuencia;
    private javax.swing.JLabel jEstadoIni;
    private javax.swing.JLabel jEstadosFinales;
    private javax.swing.JLabel jResultado;
    private javax.swing.JLabel jSecuencia;
    private javax.swing.JLabel jTitulo;
    private javax.swing.JLabel jTransiciones;
    private javax.swing.JLabel jTransicionesλ;
    private javax.swing.JTextField tSecuencia;
    // End of variables declaration//GEN-END:variables
}
